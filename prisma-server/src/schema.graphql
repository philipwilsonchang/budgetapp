# import Cost from './generated/prisma.graphql'
# import CostCreateInput from './generated/prisma.graphql'
# import CostCategory from './generated/prisma.graphql'
# import CostCategoryCreateInput from './generated/prisma.graphql'
# import MonthlyIncome from './generated/prisma.graphql'
# import MonthlyIncomeCreateInput from './generated/prisma.graphql'

type CostCategoryWithSpent {
  id: ID!
  name: String!
  monthlyLimit: Float!
  type: CategoryType!
  totalLimit: Float
  spent: Float
  createdAt: DateTime!
}

type AuthPayload {
  token: String
  user: User
}

type Query {
  getAllFlexCategoriesBetweenTimes(timeStart: DateTime!, timeEnd: DateTime!): [CostCategoryWithSpent!]
  getAllFixedCategories: [CostCategory!]
  getAllRollingCategoriesBetweenTimes(timeStart: DateTime!, timeEnd: DateTime!): [CostCategoryWithSpent!]
  getMonthlyIncome: Float!
}

type Mutation {
  createCost(data: CostCreateInput!): Cost!
  deleteCost(id: ID!): Cost!
  createCostCategory(data: CostCategoryCreateInput!): CostCategory!
  deleteCostCategory(id: ID!): CostCategory!
  updateMonthlyIncome(newincome: Float!): Float!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}